{"version":3,"sources":["logo.svg","components/Home.js","http-common.js","services/ListDataService.js","components/BuyListAdd.js","components/BuyLists.js","components/BuyList.js","services/ItemDataService.js","components/ItemTableRow.js","components/Items.js","services/ProductDataService.js","components/ProductItems.js","components/AddManualItem.js","services/ExtraDataService.js","components/ChooseRecipe.js","components/UpdatePrices.js","components/BuyListCreator.js","components/Recipes.js","components/RecipeAdd.js","components/RecipeCreator.js","components/ProductAdd.js","components/Products.js","components/Product.js","components/ItemsExecute.js","components/BuyListExecute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","JSON","stringify","process","axios","create","baseURL","window","location","protocol","headers","type","http","get","id","data","post","put","delete","BuyListAdd","useState","name","description","buyList","setBuyList","submitted","history","useHistory","handleInputChange","event","target","value","className","htmlFor","required","onChange","onClick","active","ListDataService","then","response","push","catch","e","console","log","BuyLists","setBuyLists","activeLists","setActiveBuyLists","inactiveLists","setInactiveBuyLists","currentBuyList","currentIndex","message","setMessage","useEffect","retrieveBuyLists","filter","key","chooseBuyList","index","map","BuyList","props","setCurrentBuyList","match","params","updateStatus","status","title","parentid","item","newAmount","amount","price","newStatus","newItem","listid","ItemTableRow","setItem","changeValue","ItemDataService","unit","toLowerCase","refresh","editItemProperty","propertyName","newValue","prompt","indexOf","style","color","deleteItem","shop","category","nowrap","textAlign","source","doc","document","getElementById","innerHTML","html","length","forEach","product","magazines","magazine","url","showPromotions","hidePromotions","Items","filteredItems","items","total","Math","round","reduce","a","b","setItems","colSpan","ProductItems","filterText","setFilterText","arr","Set","obj","str","categories","setCategories","filterCategories","text","tmp","toUpperCase","placeholder","currentTarget","Accordion","Card","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","parentId","parentType","ItemsDataService","addProductToList","editProduct","confirm","ProductDataService","deleteProduct","AddManualItem","initItem","manualItem","setManualItem","alert","sourceid","destid","ChooseRecipe","recipes","setRecipes","selectedRecipeId","setSelectedRecipeId","retrieveRecipes","recipe","createdAt","buyListId","ExtraDataService","UpdatePrices","listId","BuyListCreator","buyListObj","products","setProducts","retrieveBuyList","retrieveItems","retrieveProducts","buylistid","refreshLists","copyItemsBetweenLists","Recipes","RecipeAdd","setRecipe","RecipeCreator","recipeId","receipeObj","retrieveRecipe","recipeid","ProductAdd","Products","retrieveProduct","Product","currentProduct","setCurrentProduct","prevProduct","setPrevProduct","nextProduct","setNextProduct","findIndex","GotoProduct","toInitCap","charAt","slice","Table","rows","markItem","fontSize","ItemsExecute","shops","sort","shopItems","BuyListExecute","refreshList","App","to","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.caf247e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <h4>Be prepared, do the shopping.</h4>\r\n            <pre>{JSON.stringify(process.env, null, 3)}</pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import axios from \"axios\";\r\n//require('dotenv').config();\r\n\r\n\r\nexport default axios.create({\r\n  baseURL: window.location.protocol+\"//\"+(process.env.NODE_ENV===\"development\" ? window.location.hostname : process.env.REACT_APP_BASE_API_URL)+\":\"+process.env.REACT_APP_BASE_API_PORT+\"/api\",\r\n  //baseURL: window.location.protocol+\"//\"+window.location.hostname+\":\"+process.env.REACT_APP_BASE_API_PORT+\"/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nconst getAll = (type) => {\r\n  return http.get(\"/lists/?type=\"+type);\r\n};\r\n\r\nconst get = id => {\r\n  return http.get(`/lists/${id}`);\r\n};\r\n\r\nconst create = data => {\r\n  return http.post(\"/lists\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  return http.put(`/lists/${id}`, data);\r\n};\r\n\r\nconst remove = id => {\r\n  return http.delete(`/lists/${id}`);\r\n};\r\n\r\nconst removeAll = () => {\r\n  return http.delete(`/lists`);\r\n};\r\n\r\nconst findByName = name => {\r\n  return http.get(`/lists?name=${name}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n  removeAll,\r\n  findByName\r\n};","import React, { useState } from \"react\";\r\nimport { useHistory  } from \"react-router-dom\";\r\nimport ListDataService from \"../services/ListDataService\";\r\n\r\nconst BuyListAdd = () => {\r\n\r\n  const initBuyList = {\r\n      name: \"\",\r\n      description: \"\"\r\n  }\r\n  const [buyList, setBuyList] = useState(initBuyList);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setBuyList({ ...buyList, [name]: value });\r\n  };\r\n\r\n  const saveBuyList = () => {\r\n    var data = {\r\n      name: buyList.name,\r\n      type: \"BUYLIST\",\r\n      description: buyList.description,\r\n      active: 1\r\n    };\r\n\r\n    ListDataService.create(data)\r\n      .then(response => {\r\n        setBuyList({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          description: response.data.description,\r\n          active: response.data.active\r\n        });\r\n        // setSubmitted(true);\r\n        history.push(process.env.PUBLIC_URL+\"/buylists\")\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n          {/* <button className=\"btn btn-success\" onClick={newBuyList}>\r\n            Add new list\r\n          </button> */}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h4>Add new buy list</h4>\r\n        \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"name\"\r\n              required\r\n              value={buyList.name}\r\n              onChange={handleInputChange}\r\n              name=\"name\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\">Description</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              required\r\n              value={buyList.description}\r\n              onChange={handleInputChange}\r\n              name=\"description\"\r\n            />\r\n          </div>\r\n\r\n          <button onClick={saveBuyList} className=\"btn btn-success\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuyListAdd;","import React, { useState, useEffect } from \"react\";\r\nimport ListDataService from \"../services/ListDataService\";\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\nconst BuyLists = () => {\r\n  \r\n  const [buyLists, setBuyLists] = useState([]);\r\n  const [activeLists, setActiveBuyLists] = useState([]);\r\n  const [inactiveLists, setInactiveBuyLists] = useState([]);\r\n  const [currentBuyList, setCurrentBuyList] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [message, setMessage] = useState(\"Loading...\");\r\n\r\n  const history = useHistory();\r\n  \r\n  useEffect(() => {\r\n    retrieveBuyLists();\r\n  }, []);\r\n\r\n  const onChangeSearchName = e => {\r\n    const searchName = e.target.value;\r\n    setSearchName(searchName);\r\n  };\r\n\r\n  const retrieveBuyLists = () => {\r\n    ListDataService.getAll(\"BUYLIST\")\r\n      .then(response => {\r\n        setBuyLists(response.data);\r\n        //let activeLists = ;\r\n        setActiveBuyLists(response.data.filter( key => {return +key.active === 1} ));\r\n        setInactiveBuyLists(response.data.filter( key => {return +key.active === 0} ));\r\n        setMessage(\"\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const chooseBuyList = (buyList, index) => {\r\n    history.push(process.env.PUBLIC_URL+\"/buylists/creator/\"+buyList.id);\r\n    // setCurrentBuyList(buyList);\r\n    // setCurrentIndex(index);\r\n  };\r\n\r\n  const addBuyList = () => {\r\n    history.push(process.env.PUBLIC_URL+\"/buylists/add\");\r\n  }\r\n\r\n  const findByName = () => {\r\n    ListDataService.findByName(searchName)\r\n      .then(response => {\r\n        setBuyLists(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"row\">\r\n{/*       \r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by title\"\r\n            value={searchName}\r\n            onChange={onChangeSearchName}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByName}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n\r\n  \r\n      <div className=\"col-md-10\">\r\n        <h4>Shopping Lists</h4>\r\n\r\n        <button className=\"m-3 btn btn-sm btn-success\" onClick={addBuyList}>\r\n          Add new list\r\n        </button>\r\n\r\n        <br/>\r\n        <b>Active lists</b>\r\n        <ul className=\"list-group\">\r\n           \r\n          {activeLists &&\r\n            activeLists.map((buyList, index) => ( \r\n              <li\r\n                className={\r\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                onClick={() => chooseBuyList(buyList, index)}\r\n                key={index}\r\n              >\r\n                {buyList.name} - {buyList.description} / #{buyList.id}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n\r\n        <br/><br/>\r\n        <b>Inactive lists</b>\r\n        <ul className=\"list-group\">\r\n           \r\n          {inactiveLists &&\r\n            inactiveLists.map((buyList, index) => ( \r\n              <li\r\n                className={\r\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                onClick={() => chooseBuyList(buyList, index)}\r\n                key={index}\r\n              >\r\n                {buyList.name} - {buyList.description} / #{buyList.id} \r\n              </li>\r\n            ))}\r\n        </ul>\r\n\r\n        {/* - {buyList.active ? \"Active\" : \"Not active\"} / {buyList.createdAt} */}\r\n        {/* <button\r\n          className=\"m-3 btn btn-sm btn-danger\"\r\n          onClick={removeAllBuyLists}\r\n        >\r\n          Remove All\r\n        </button> */}\r\n\r\n      </div>\r\n\r\n      \r\n      <div className=\"col-md-6\">\r\n        <br/>\r\n        {currentBuyList ? (\r\n          <div>\r\n            <b>Buy List</b>\r\n            <div>\r\n              <label>\r\n                <strong>Name:</strong>\r\n              </label>{\" \"}\r\n              {currentBuyList.name}\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <strong>Description:</strong>\r\n              </label>{\" \"}\r\n              {currentBuyList.description}\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <strong>Status:</strong>\r\n              </label>{\" \"}\r\n              {currentBuyList.active ? \"Active\" : \"Not active\"}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n              <button className=\"m-3 btn btn-sm btn-info\" onClick={()=>{history.push(process.env.PUBLIC_URL+\"/buylists/\"+currentBuyList.id);}}>\r\n                  Edit\r\n                </button>\r\n                <button className=\"m-3 btn btn-sm btn-primary\" onClick={()=>{history.push(process.env.PUBLIC_URL+\"/buylists/creator/\"+currentBuyList.id);}}>\r\n                  Items\r\n                </button>\r\n                <button className=\"m-3 btn btn-sm btn-warning\" onClick={()=>{history.push(process.env.PUBLIC_URL+\"/buylists/execute/\"+currentBuyList.id);}}>\r\n                  Execute\r\n                </button>\r\n              </div>  \r\n            </div>          \r\n\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />    \r\n            {message}        \r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuyLists;\r\n\r\n// const removeAllBuyLists = () => {\r\n//   if (window.confirm(\"Czy na pewno usunąć wszystkie listy?\")) {\r\n//     ListDataService.removeAll()\r\n//       .then(response => {\r\n//         refreshList();\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(e);\r\n//       });\r\n//   }\r\n// };\r\n\r\n  // const refreshList = () => {\r\n  //   retrieveBuyLists();\r\n  //   setCurrentBuyList(null);\r\n  //   setCurrentIndex(-1);\r\n  // };","import React, { useState, useEffect } from \"react\";\r\nimport ListDataService from \"../services/ListDataService\";\r\n\r\nconst BuyList = props => {\r\n  const initialBuyListState = {\r\n    id: null,\r\n    name: \"\",\r\n    description: \"\",\r\n    active: false\r\n  };\r\n  const [currentBuyList, setCurrentBuyList] = useState(initialBuyListState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getBuyList = id => {\r\n    ListDataService.get(id)\r\n      .then(response => {\r\n        setCurrentBuyList(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBuyList(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentBuyList({ ...currentBuyList, [name]: value });\r\n  };\r\n\r\n  const updateStatus = status => {\r\n    var data = {\r\n      id: currentBuyList.id,\r\n      name: currentBuyList.title,\r\n      description: currentBuyList.description,\r\n      active: status\r\n    };\r\n\r\n    ListDataService.update(currentBuyList.id, data)\r\n      .then(response => {\r\n        setCurrentBuyList({ ...currentBuyList, active: status });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateBuyList = () => {\r\n    ListDataService.update(currentBuyList.id, currentBuyList)\r\n      .then(response => {\r\n        setMessage(\"The Buy List was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteBuyList = () => {\r\n    ListDataService.remove(currentBuyList.id)\r\n      .then(response => {\r\n        props.history.push(process.env.PUBLIC_URL+\"/buylists\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {currentBuyList ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Shopping List</h4>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={currentBuyList.name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={currentBuyList.description}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>\r\n                <strong>Status:</strong>\r\n              </label>\r\n              {currentBuyList.active ? \"Active\" : \"Not active\"}\r\n            </div>\r\n          </form>\r\n\r\n          {currentBuyList.active ? (\r\n            <button\r\n              className=\"badge badge-primary mr-2\"\r\n              onClick={() => updateStatus(0)}\r\n            >\r\n              Deactivate\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"badge badge-primary mr-2\"\r\n              onClick={() => updateStatus(1)}\r\n            >\r\n              Activate\r\n            </button>\r\n          )}\r\n\r\n          <button className=\"badge badge-danger mr-2\" onClick={deleteBuyList}>\r\n            Delete\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateBuyList}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Buy List...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuyList;","import http from \"../http-common\";\r\n\r\nconst create = data => {\r\n  return http.post(\"/items\", data);\r\n};\r\n\r\nconst getItems = parentid => {\r\n  return http.get(`/items/parent/${parentid}`);\r\n};\r\n\r\nconst deleteItem = id => {\r\n  return http.delete(`/items/${id}`);\r\n};\r\n\r\nconst deleteAllItemsFromList = listid => {\r\n  return http.delete(`/items/all/${listid}`);\r\n};\r\n\r\nconst updateItemName = (id, newName) => {\r\n  return http.put(`/items/${id}`, {name: newName});\r\n};\r\n\r\nconst updateItemAmount = (item, newAmount) => {\r\n  return http.put(`/items/${item.id}`, {amount: newAmount, value: newAmount * item.price});\r\n};\r\n\r\nconst updateItemStatus = (id, newStatus) => {\r\n  return http.put(`/items/${id}`, {status: newStatus});\r\n};\r\n\r\nconst updateItem = (id, newItem) => {\r\n  return http.put(`/items/${id}`, newItem);\r\n};\r\n\r\nconst getPromotions = (name) => {\r\n  return http.get(`/extra/promotion/${name}`);\r\n};\r\n\r\nexport default {\r\n  create, \r\n  getItems, \r\n  deleteItem,\r\n  updateItemName,\r\n  updateItemAmount,\r\n  updateItemStatus,\r\n  updateItem,\r\n  deleteAllItemsFromList,\r\n  getPromotions\r\n};","import React, {useState, useEffect} from \"react\";\r\nimport ItemDataService from \"../services/ItemDataService\";\r\nimport { reduceHooks } from \"react-table\";\r\n//SORTTABLE - https://github.com/AllenFang/react-bootstrap-table\r\n\r\nconst ItemTableRow = props => {\r\n    const [item, setItem] = useState(props.item);\r\n    let index = props.index;\r\n\r\n    useEffect(()=> {\r\n        setItem(props.item);\r\n    }, [props.item])\r\n\r\n    const deleteItem = item => {\r\n        ItemDataService.deleteItem(item.id) \r\n            .then(response => {\r\n                props.refresh();\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    const changeValue = (item, value) => {\r\n        if (1*value === -1.0 && 1*item.amount === 0.0) return;\r\n        ItemDataService.updateItemAmount(item, (1*item.amount) + (1*value*(item.unit.toLowerCase()===\"kg\" ? 0.1 : 1))) \r\n            .then(response => {\r\n                props.refresh();\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    const editItemProperty = (item, propertyName) => {\r\n        let newValue = prompt('Enter new value for ['+propertyName+']', item[propertyName])\r\n\r\n        if (newValue===''||newValue===null) return\r\n\r\n        item[propertyName] = newValue\r\n\r\n        //calculate value\r\n        if ( ['price'].indexOf(propertyName.toLowerCase())>-1 ) item.value = item.amount * item.price\r\n\r\n        ItemDataService.updateItem(item.id, item) \r\n            .then(response => {\r\n                props.refresh();\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n    }\r\n\r\n    const showPromotions = (item) => {\r\n        let doc = document.getElementById(item.id)\r\n        doc.innerHTML = '...' \r\n        ItemDataService.getPromotions(item.name) \r\n        .then(response => {\r\n            //render promotions\r\n            let html = 'brak'\r\n            if (response.data.length > 0) {\r\n                html = '<br>'\r\n                response.data.forEach(item => {\r\n                    html += item.product+'<ul>'\r\n                    item.magazines.forEach(magazine => {\r\n                        html += '<li><a target=\"_blank\" href=\"'+magazine.url+'\">'+magazine.title+'</a></li>'\r\n                    })\r\n                    html += '</ul>'\r\n                })\r\n            }\r\n            doc.innerHTML = html\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }       \r\n    \r\n    const hidePromotions = (item) => {\r\n        let doc = document.getElementById(item.id)\r\n        doc.innerHTML = ''\r\n    } \r\n\r\n    return (\r\n        (item) ?         \r\n            <tr key={index} style={{color: item.amount > 0.0 ? \"black\": \"red\"}}>\r\n            <td>{index+1}</td>\r\n            <td>\r\n                <button className=\"badge badge-danger\" onClick={() => deleteItem(item)}>-</button>\r\n            </td>\r\n            <td><span onClick={() => editItemProperty(item, 'shop')}>{item.shop}</span></td>\r\n            <td>{item.category}</td>\r\n            <td nowrap=\"true\"><span onClick={() => editItemProperty(item, 'name')}>{item.name}</span></td>\r\n            <td nowrap=\"true\" style={{textAlign: \"right\"}}>\r\n            <span>{item.amount}</span>&nbsp;&nbsp;<button className=\"badge badge-primary\" onClick={()=>changeValue(item, -1)}>-</button>&nbsp;<button className=\"badge badge-primary\" onClick={()=>changeValue(item, 1)}>+</button>\r\n            </td>\r\n            <td><span onClick={() => editItemProperty(item, 'unit')}>{item.unit.toLowerCase()}</span></td>\r\n            <td style={{textAlign: \"right\"}}><span onClick={() => editItemProperty(item, 'price')}>{item.price}</span></td>\r\n            <td style={{textAlign: \"right\"}}><b>{item.value}</b></td>\r\n            <td nowrap=\"false\"><i>{item.source}</i></td>\r\n            <td nowrap=\"false\">\r\n                <button className=\"badge badge-info\" onClick={()=>showPromotions(item)}>?</button>\r\n                &nbsp;<button className=\"badge\" onClick={()=>hidePromotions(item)}>-</button>\r\n                <span id={item.id}></span>\r\n            </td>\r\n            {/* <td nowrap=\"true\">{item.createdAt} / {item.updatedAt}</td> */}\r\n            </tr>\r\n        : \"\"\r\n    );\r\n}\r\n\r\nexport default ItemTableRow;","import React, {useState, useEffect} from \"react\";\r\nimport ItemTableRow from \"./ItemTableRow\";\r\n//SORTTABLE - https://github.com/AllenFang/react-bootstrap-table\r\n\r\nconst Items = props => {\r\n    let filteredItems = props.items;\r\n    const total = Math.round(filteredItems.reduce((a,b) => +a + +b.value, 0) * 100) / 100;\r\n//    let tmp = filteredItems.map((item, index)=>{return item.amount});  \r\n//console.log(tmp);  \r\n//    const [amounts, setAmounts] = useState(tmp);\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // console.log(props.items);\r\n        setItems(filteredItems);\r\n        // console.log(items);\r\n    }, [filteredItems]);\r\n\r\n    //delete item from list\r\n    // const deleteItem = item => {\r\n    //     ItemDataService.deleteItem(item.id) \r\n    //     .then(response => {\r\n    //         props.refresh();\r\n    //     })\r\n    //     .catch(e => {\r\n    //         console.log(e);\r\n    //     });\r\n    // }\r\n\r\n    // const handleInputChange = (event) => {\r\n    //     //let index = 0;\r\n    //     const { name, value } = event.target;\r\n    //     let field = name.substr(0,name.indexOf(\"-\"));\r\n    //     let index = name.substr(name.indexOf(\"-\")+1);\r\n    //     console.log(\"handleInputChange\"+name+\"/\"+index+\"/\"+value);\r\n    //     items[index].amount = value;\r\n    //     console.log(tmp);\r\n    //     setAmounts(items);\r\n    //     //props.refresh();\r\n    // }\r\n\r\n    return (\r\n        <div>     \r\n            {/* {JSON.stringify(filteredItems)} */}\r\n            {items && items.length > 0 ? \r\n                <table className=\"table table-striped table-bordered table-hover table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th></th>\r\n                            <th>Shop</th>\r\n                            <th>Category</th>\r\n                            <th>Name</th>\r\n                            <th>Amount</th>\r\n                            <th>Unit</th>\r\n                            <th>Price</th>\r\n                            <th>Value</th>\r\n                            <th>Source</th>\r\n                            <th>Promotions</th>\r\n                            {/* <th>Date</th> */}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { items.map((item, index) => (\r\n                        <ItemTableRow key={index} item={item} index={index} refresh={props.refresh}/>\r\n                    )) }\r\n                    <tr>\r\n                        <td colSpan=\"8\">Total</td>\r\n                        <td style={{textAlign: \"right\"}}><b>{total}</b></td>\r\n                        <td colSpan=\"2\"></td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            : <div>Lista jest pusta<br/><br/></div> }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Items;\r\n\r\n\r\n        // ItemsDataService.updateBuyListItem(item.id, \"updated \"+new Date()) \r\n        // .then(response => {\r\n        //     props.refresh();\r\n        // })\r\n        // .catch(e => {\r\n        //     console.log(e);\r\n        // });\r\n\r\n        // <div className=\"row\">\r\n        // <div className=\"col-md-8\">\r\n        // </div>\r\n        // </div>\r\n\r\n        //<input type=\"number\" value={item.price} name={\"price-\"+index} onChange={handleChange}></input>\r\n        //<input type=\"number\"\r\n        \r\n            //handle price change\r\n    // const handleChange = (event) => {\r\n    //     // const { name, value } = event.target;\r\n    //     // setCurrentBuyList({ ...currentBuyList, [name]: value });\r\n    //     const { name, value } = event.target;\r\n    //     let field = name.substr(0,name.indexOf(\"-\"));\r\n    //     let index = name.substr(name.indexOf(\"-\")+1);\r\n    //     filteredItems[index][field] = value;\r\n    //     filteredItems[index].value = filteredItems[index].price * filteredItems[index].amount;\r\n    // } ","import http from \"../http-common\";\r\n\r\nconst create = data => {\r\n    return http.post(\"/products\", data);\r\n  };\r\n\r\nconst getAll = () => {\r\n    return http.get('/products/');\r\n};\r\n\r\nconst get = id => {\r\n    return http.get(`/products/${id}`);\r\n  };\r\n\r\nconst update = (id, data) => {\r\n    return http.put(`/products/${id}`, data);\r\n};  \r\n\r\nconst getProductsNotOnList = parentid => {\r\n    return http.get('/products/parent/'+parentid);\r\n};\r\n\r\nconst remove = id => {\r\n    return http.delete(`/products/${id}`);\r\n};\r\n\r\nexport default {\r\n    create,\r\n    remove,\r\n    getAll,\r\n    get,\r\n    update,\r\n    getProductsNotOnList\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory  } from \"react-router-dom\";\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport ItemsDataService from \"../services/ItemDataService\";\r\nimport ProductDataService from \"../services/ProductDataService\";\r\n\r\nconst ProductItems = props => {\r\n  const history = useHistory();\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  let arr = [...new Set( props.items.map(obj => obj.category)) ].map((str) => ( { name: str }));\r\n  const [categories, setCategories] = useState(arr);\r\n\r\n  useEffect(() => {\r\n    filterCategories(filterText);\r\n  }, [props]);\r\n\r\n\r\n\r\n  //setCategories();\r\n  //const shops = [...new Set( props.items.map(obj => obj.shop)) ];\r\n  //const categories = [...new Set( props.items.map(obj => obj.category)) ].map((str) => ( { name: str }));\r\n\r\n  const addProductToList = (product) => {\r\n    var obj = {\r\n      parentid: props.parentId, \r\n      name: product.name,\r\n      category: product.category,\r\n      shop: product.shop,\r\n      source: props.parentType,\r\n      unit: product.unit ? product.unit : \"SZT\",\r\n      price: product.price ? product.price : 0.0\r\n    }\r\n\r\n    ItemsDataService.create(obj)\r\n      .then(response => {\r\n        props.refresh();\r\n        filterCategories(filterText);\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n    });\r\n  }\r\n\r\n  const filterCategories = (text = \"\") => {\r\n    if (props.items.length === 0) return; \r\n    let tmp = props.items.filter((item) => \r\n      (text === \"\" || item.name.toUpperCase().indexOf(text.toUpperCase())>-1)\r\n    );\r\n    let arr = [...new Set( tmp.map(obj => obj.category)) ].map((str) => ( { name: str }));\r\n    setCategories(arr);\r\n  }\r\n\r\n  const handleFilterTextChange = (e) => {\r\n    setFilterText(e.currentTarget.value);\r\n    filterCategories(e.currentTarget.value);\r\n  }\r\n\r\n  //edit\r\n  const editProduct = (product) => {\r\n      history.push(process.env.PUBLIC_URL+\"/products/\"+product.id);\r\n  }\r\n\r\n//edit\r\nconst deleteProduct = (product) => {\r\n  if (window.confirm('Are you sure to DELETE a product?')) \r\n  ProductDataService.remove(product.id)\r\n        .then(response => {\r\n          props.refresh();\r\n          filterCategories(filterText);\r\n      })\r\n      .catch(e => {\r\n          console.log(e);\r\n      });\r\n}  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      {/* <br/>shops={JSON.stringify(shops)}\r\n      <br/>categories={JSON.stringify(categories)} */}\r\n      {/* <div className=\"row\">\r\n          <div className=\"col\">\r\n            <span className=\"badge badge-info\" onClick={()=>filterCategory(\"*\")}>*</span>\r\n          </div>\r\n          {categories.map((cat, index) => (\r\n            <div className=\"col\" key={index}>\r\n              <span className=\"badge badge-info\" onClick={()=>filterCategory(cat)}>{cat}</span>\r\n            </div>  \r\n          ))\r\n          }\r\n        \r\n      </div> */}\r\n\r\n          <input\r\n              type=\"text\"\r\n              className=\"form-control\"              \r\n              id=\"filterText\"\r\n              placeholder=\"Filter catalog...\"\r\n              value={filterText}\r\n              onChange={handleFilterTextChange}\r\n              name=\"filterText\"\r\n            />\r\n      <Accordion>\r\n      {/* defaultActiveKey={0} */}\r\n        {categories.map((category, index) => (\r\n          <Card key={index}>\r\n\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey={index}>\r\n                {category.name}\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n\r\n            <Accordion.Collapse eventKey={index}>\r\n              <Card.Body>\r\n                <table className=\"table table-striped table-bordered table-hover table-sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>No</th>\r\n                      <th></th>\r\n                      <th>Category</th>\r\n                      <th>Name</th>\r\n                      <th>Shop</th>\r\n                      <th>Unit</th>\r\n                      <th>Price</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {props.items.filter((item) => item.category === category.name && (filterText === \"\" || item.name.toUpperCase().indexOf(filterText.toUpperCase())>-1)).map((product, index) => (\r\n                      <tr key={index}>\r\n                        <td>{index+1}</td>\r\n                    <td>{props.parentId !== null ? \r\n                        <button className=\"badge badge-success\" onClick={() => addProductToList(product)}>Add</button>\r\n                        :\r\n                        <span>\r\n                          <button className=\"badge badge-primary\" onClick={() => editProduct(product)}>Edit</button>    \r\n                          <button className=\"badge badge-danger\" onClick={() => deleteProduct(product)}>Del</button>           \r\n                        </span>\r\n                        }</td>\r\n                        <td>{product.category}</td>\r\n                        <td>{product.name}</td>\r\n                        <td>{product.shop}</td>\r\n                        <td>{product.unit}</td>\r\n                        <td>{product.price}</td>\r\n                      </tr> \r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n\r\n          </Card>\r\n        ))}\r\n      </Accordion>\r\n      <br/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductItems;","import React, { useState } from \"react\";\r\nimport ItemsDataService from \"../services/ItemDataService\";\r\n\r\nconst AddManualItem = props => {\r\n    var initItem = {\r\n      parentid: props.parentId,\r\n      name: \"\",\r\n      category: \"\",\r\n      shop: \"\",\r\n      source: \"MANUAL\",//###const\r\n      unit: \"\",\r\n      price: \"\",\r\n      amount: \"\"      \r\n    }\r\n\r\n    const [manualItem, setManualItem] = useState(initItem);\r\n\r\n    const handleInputChange = (e) => setManualItem({\r\n      ...manualItem,\r\n      [e.currentTarget.name]: e.currentTarget.value\r\n    })\r\n\r\n    const addManualItemToList = () => {\r\n      if (manualItem.name === \"\" || manualItem.category === \"\") {\r\n        alert(\"Name and category are required.\");\r\n        return;\r\n      }\r\n        ItemsDataService.create(manualItem)\r\n        .then(response => {\r\n            props.refresh();\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <h4>Add item manually</h4>        \r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"name\"\r\n              placeholder=\"Name...\"\r\n              required\r\n              value={manualItem.name}\r\n              onChange={handleInputChange}\r\n              name=\"name\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"category\"\r\n              placeholder=\"Category...\"\r\n              required\r\n              value={manualItem.category}\r\n              onChange={handleInputChange}\r\n              name=\"category\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"shop\"\r\n              placeholder=\"Shop...\"\r\n              required  \r\n              value={manualItem.shop}\r\n              onChange={handleInputChange}\r\n              name=\"shop\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"unit\"\r\n              placeholder=\"Unit...\"\r\n              value={manualItem.unit}\r\n              onChange={handleInputChange}\r\n              name=\"unit\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"              \r\n              id=\"price\"\r\n              placeholder=\"Price...\"\r\n              value={manualItem.price}\r\n              onChange={handleInputChange}\r\n              name=\"price\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"              \r\n              id=\"amount\"\r\n              placeholder=\"Amount...\"\r\n              value={manualItem.amount}\r\n              onChange={handleInputChange}\r\n              name=\"amount\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            {manualItem.price && manualItem.amount ? Math.round(manualItem.price * manualItem.amount * 100) / 100: \"\"}\r\n          </div>\r\n        </div>\r\n        \r\n        <br/>\r\n        <button onClick={addManualItemToList} className=\"btn btn-success\">\r\n          Add item\r\n        </button>\r\n        <br/><br/>\r\n        <br/>\r\n    </div>    \r\n    );\r\n  };\r\n  \r\n  export default AddManualItem;","import http from \"../http-common\";\r\n\r\nconst copyItemsFromRecipeToBuyList = data => {\r\n  return http.post(\"/extra/copyrecipe\", data);\r\n};\r\n\r\nconst copyItemsBetweenLists = (sourceid, destid, status) => {\r\n  return http.get(\"/extra/copyitems/\"+sourceid+\"/\"+destid+\"/\"+status);\r\n};\r\n\r\nconst updatePrices = data => {\r\n  return http.post(\"/extra/updateprices\", data);\r\n};\r\n\r\nexport default {\r\n    copyItemsFromRecipeToBuyList,\r\n    copyItemsBetweenLists,\r\n    updatePrices\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport ListDataService from \"../services/ListDataService\";\r\nimport ExtraDataService from \"../services/ExtraDataService\";\r\n\r\nconst ChooseRecipe = props => {\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [selectedRecipeId, setSelectedRecipeId] = useState(-1);\r\n\r\n    useEffect(() => {\r\n        retrieveRecipes();\r\n    }, []);\r\n\r\n    const retrieveRecipes = () => {\r\n        ListDataService.getAll(\"RECIPE\")\r\n          .then(response => {\r\n            setRecipes(response.data);\r\n            setSelectedRecipeId(response.data[0].id)\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    };\r\n\r\n    const handleSelectChange = (e) => setSelectedRecipeId(\r\n        1*e.currentTarget.value\r\n    )\r\n\r\n    const addRecipe = () => {\r\n        var data = {\r\n            sourceid: selectedRecipeId,\r\n            destid: props.buyListId\r\n        }\r\n        ExtraDataService.copyItemsFromRecipeToBuyList(data)\r\n            .then(response => {\r\n                props.refresh();\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });    \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>Select recipe</h4>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <select onChange={handleSelectChange} value={selectedRecipeId} className=\"form-control\">\r\n                    { recipes.map((recipe, index) => (\r\n                        <option value={recipe.id} key={recipe.id} > \r\n                            #{recipe.id} {recipe.name} - {recipe.description} - {recipe.createdAt}\r\n                        </option>\r\n                    ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <button className=\"m-3 btn btn-success\" onClick={addRecipe}>\r\n                        Add recipe\r\n                    </button>\r\n                </div>\r\n            </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ChooseRecipe;","import React from \"react\";\r\nimport ExtraDataService from \"../services/ExtraDataService\";\r\n\r\nconst UpdatePrices = props => {\r\n\r\n    const update = () => {\r\n        if (window.confirm(\"Do you want to update prices?\")) {\r\n            var data = {\r\n                listid: props.listId\r\n            }\r\n            ExtraDataService.updatePrices(data)\r\n                .then(response => {\r\n                    props.refresh();\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });    \r\n        }\r\n    }\r\n\r\n    return (\r\n        <button className=\"m-3 btn btn-sm btn-warning\" onClick={update}>\r\n            Update prices\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default UpdatePrices;","import React, { useState, useEffect } from \"react\";\r\nimport Items from \"./Items\";\r\nimport ProductItems from \"./ProductItems\";\r\nimport AddManualItem from \"./AddManualItem\";\r\nimport ChooseRecipe from \"./ChooseRecipe\";\r\nimport UpdatePrices from \"./UpdatePrices\";\r\nimport ListDataService from \"../services/ListDataService\";\r\nimport ItemDataService from \"../services/ItemDataService\";\r\nimport ProductDataService from \"../services/ProductDataService\";\r\nimport ExtraDataService from \"../services/ExtraDataService\";\r\n\r\nconst BuyListCreator = props => {\r\n    var buyListId = props.match.params.id;\r\n\r\n    const buyListObj = {\r\n        id: buyListId,\r\n        name: \"\",\r\n        description: \"\",\r\n        active: false\r\n    }\r\n\r\n    const [buyList, setBuyList] = useState(buyListObj); \r\n    const [items, setItems] = useState([]);\r\n    const [products, setProducts] = useState([]); \r\n    // const [categories, setCategories] = useState([]);\r\n       \r\n    useEffect(() => {\r\n        retrieveBuyList(buyListId);\r\n        retrieveItems(buyListId);\r\n        retrieveProducts(buyListId);\r\n    }, [buyListId]);\r\n\r\n    //retrieve buy list info\r\n    const retrieveBuyList = id => {\r\n        ListDataService.get(id) \r\n        .then(response => {\r\n            setBuyList(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    };\r\n\r\n    //retrieve items of buy list\r\n    const retrieveItems = buylistid => {        \r\n        ItemDataService.getItems(buylistid) \r\n        .then(response => {\r\n            setItems(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    //retrieve items of buy list\r\n    const clearBuyList = () => {   \r\n        if (window.confirm(\"Do you want to delete all items from list?\")) {     \r\n            ItemDataService.deleteAllItemsFromList(buyListId) \r\n            .then(response => {\r\n                retrieveItems(buyListId);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n        }\r\n    }\r\n    \r\n    //retrieve products not on list\r\n    const retrieveProducts = buylistid => {\r\n        ProductDataService.getProductsNotOnList(buylistid)\r\n          .then(response => {\r\n            setProducts(response.data);\r\n            // const tmp = [...new Set( response.data.map(obj => obj.category)) ];\r\n            // setCategories(tmp);\r\n          })\r\n          .catch(e => {\r\n              console.log(e);\r\n          });\r\n    };\r\n\r\n    const copyItemsBetweenLists = (destid) => {\r\n        let buylistid = prompt('Please enter id of SOURCE list. \\nItems marked \\'LATER\\' will be copied.')\r\n        ExtraDataService.copyItemsBetweenLists(buylistid, destid, 'LATER')\r\n        .then(response => {\r\n            retrieveItems(buyListId);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n    \r\n      //refresh both lists\r\n    const refreshLists = () => {\r\n        retrieveItems(buyListId);\r\n        retrieveProducts(buyListId);\r\n    }\r\n    return (\r\n        <div>\r\n\r\n{/* <button onClick={()=>refreshLists()}>Refresh</button> */}\r\n\r\n            <h3>#{buyList.id} {buyList.name} {buyList.description}</h3>\r\n            <div className=\"row\">\r\n                <div className=\"col\">   \r\n                    <button className=\"m-3 btn btn-sm btn-primary\" onClick={()=>{props.history.push(process.env.PUBLIC_URL+\"/buylists/\"+buyListId)} }>\r\n                        Edit\r\n                    </button> \r\n\r\n                    <button className=\"m-3 btn btn-sm btn-success\" onClick={()=>{props.history.push(process.env.PUBLIC_URL+\"/buylists/execute/\"+buyListId)} }>\r\n                        &gt; Execute\r\n                    </button> \r\n                    \r\n                    {items.length > 0 ?\r\n                        <span> \r\n                            <UpdatePrices listId={buyList.id} refresh={()=>retrieveItems(buyListId)}/>\r\n                            <button className=\"m-3 btn btn-sm btn-danger\" onClick={clearBuyList}>Clear</button>\r\n                        </span>\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">   \r\n                    <Items items={items} refresh={refreshLists} />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <h3><i>Add new items</i></h3>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <ChooseRecipe buyListId={buyList.id} refresh={refreshLists}/>\r\n                </div>\r\n            </div>\r\n\r\n            <h4>Choose from catalog</h4>\r\n            <div className=\"row\">\r\n                <div className=\"col\">   \r\n                    <ProductItems parentId={buyList.id} \r\n                              parentType=\"BUYLIST\" \r\n                              items={products} \r\n                               refresh={refreshLists}/>\r\n                               {/* categories={categories} */}\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <AddManualItem parentId={buyList.id} refresh={refreshLists}/>\r\n                </div>\r\n            </div>\r\n\r\n            <h4>Copy 'LATER' items from another list</h4>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <button className=\"m-3 btn btn-sm btn-primary\" onClick={()=>copyItemsBetweenLists(buyList.id)}>Choose list</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuyListCreator;","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ListDataService from \"../services/ListDataService\";\r\n\r\nconst Recipes = () => {\r\n    const [recipes, setRecipes] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        retrieveRecipes();\r\n    }, []);\r\n\r\n    const retrieveRecipes = () => {\r\n        ListDataService.getAll(\"RECIPE\")\r\n          .then(response => {\r\n            setRecipes(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    };\r\n\r\n    const addRecipe = () => {\r\n      history.push(process.env.PUBLIC_URL+\"/recipes/add\");  \r\n    }\r\n\r\n    const gotoRecipe = (id) => {\r\n      history.push(process.env.PUBLIC_URL+\"/recipes/creator/\"+id); \r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-10\">\r\n            <h4>Recipes</h4>\r\n\r\n            <button className=\"m-3 btn btn-sm btn-success\" onClick={addRecipe}>\r\n                Add recipe\r\n            </button>\r\n\r\n            <ul className=\"list-group\">\r\n              {recipes.length > 0 ?\r\n                recipes.map((recipe, index) => (\r\n                <li className=\"list-group-item\" \r\n                    key={index} \r\n                    onClick={() => gotoRecipe(recipe.id)}>\r\n                    #{recipe.id} {recipe.name} - {recipe.description} - {recipe.createdAt}\r\n                </li>\r\n                )) : \"Lista jest pusta\"}\r\n            </ul>\r\n          </div>                 \r\n\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Recipes;","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ListDataService from \"../services/ListDataService\";\r\n\r\nconst RecipeAdd = () => {\r\n  const history = useHistory();\r\n\r\n  const [recipe, setRecipe] = useState({});\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setRecipe({ ...recipe, [name]: value });\r\n  };\r\n\r\n  const saveRecipe = () => {\r\n    var data = {\r\n      name: recipe.name,\r\n      type: \"RECIPE\",\r\n      description: recipe.description\r\n    };\r\n\r\n    ListDataService.create(data)\r\n      .then(response => {\r\n        setRecipe({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          type: response.data.type,\r\n          description: response.data.description,\r\n          active: response.data.active\r\n        });\r\n        history.push(process.env.PUBLIC_URL+\"/recipes/creator/\"+response.data.id);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n        <h4>Add new recipe</h4>\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"name\"\r\n              required\r\n              value={recipe.name}\r\n              onChange={handleInputChange}\r\n              name=\"name\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\">Description</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              required\r\n              value={recipe.description}\r\n              onChange={handleInputChange}\r\n              name=\"description\"\r\n            />\r\n          </div>\r\n\r\n          <button onClick={saveRecipe} className=\"btn btn-success\">\r\n            Save\r\n          </button>\r\n        </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeAdd;","import React, { useState, useEffect } from \"react\";\r\nimport Items from \"./Items\";\r\nimport ProductItems from \"./ProductItems\";\r\nimport AddManualItem from \"./AddManualItem\";\r\nimport UpdatePrices from \"./UpdatePrices\";\r\nimport ListDataService from \"../services/ListDataService\";\r\nimport ItemDataService from \"../services/ItemDataService\";\r\nimport ProductDataService from \"../services/ProductDataService\";\r\n\r\nconst RecipeCreator = props => {\r\n    var recipeId = props.match.params.id;\r\n\r\n    const receipeObj = {\r\n        id: recipeId,\r\n        name: \"\",\r\n        description: \"\",\r\n        active: false\r\n    }\r\n\r\n    const [recipe, setRecipe] = useState(receipeObj); \r\n    const [items, setItems] = useState([]);\r\n    const [products, setProducts] = useState([]); \r\n    //const [categories, setCategories] = useState([]);\r\n       \r\n    useEffect(() => {\r\n        retrieveRecipe(recipeId);\r\n        retrieveItems(recipeId);\r\n        retrieveProducts(recipeId);\r\n    }, [recipeId]);\r\n\r\n    //retrieve buy list info\r\n    const retrieveRecipe = id => {\r\n        ListDataService.get(id) \r\n        .then(response => {\r\n            setRecipe(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    };\r\n\r\n    //retrieve items of buy list\r\n    const retrieveItems = recipeid => {        \r\n        ItemDataService.getItems(recipeid) \r\n        .then(response => {\r\n            setItems(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    //retrieve product catalog\r\n    const retrieveProducts = recipeid => {\r\n        ProductDataService.getProductsNotOnList(recipeid)\r\n          .then(response => {\r\n            setProducts(response.data);\r\n            // const tmp = [...new Set( response.data.map(obj => obj.category)) ];\r\n            // setCategories(tmp);\r\n          })\r\n          .catch(e => {\r\n              console.log(e);\r\n          });\r\n      };\r\n    \r\n    // const updateRecipeItemsPriceFromProducts = () => {\r\n    //     if (window.confirm(\"Do you want to update prices?\")) {\r\n    //         var data = {\r\n    //             recipeid: recipeId\r\n    //         }\r\n    //         ExtraDataService.updateRecipeItemsPriceFromProducts(data)\r\n    //             .then(response => {\r\n    //                 retrieveItems(recipeId);\r\n    //             })\r\n    //             .catch(e => {\r\n    //                 console.log(e);\r\n    //             });    \r\n    //     }\r\n    // }\r\n\r\n\r\n    //refresh both lists\r\n    const refreshLists = () => {\r\n        retrieveItems(recipeId);\r\n        retrieveProducts(recipeId);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <Link to={`/buylistitems/choose/${buyList.id}`} className=\"nav-link\">\r\n                Add item\r\n            </Link> */}\r\n{/* <button onClick={()=>refreshLists()}>Refresh</button> */}\r\n\r\n            <h2>Recipe #{recipe.id} {recipe.name}</h2>        \r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">   \r\n                    <Items items={items} refresh={refreshLists}/>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <button className=\"m-3 btn btn-sm btn-warning\" onClick={updateRecipeItemsPriceFromProducts}>\r\n                  Update prices\r\n            </button> */}\r\n            <UpdatePrices listId={recipe.id} refresh={()=>retrieveItems(recipeId)}/>\r\n\r\n            <h4>Choose product from catalog</h4>\r\n            <div className=\"row\">\r\n                <div className=\"col\">   \r\n                    <ProductItems \r\n                        parentType=\"RECIPE\" \r\n                        parentId={recipe.id} \r\n                        items={products}                          \r\n                        refresh={refreshLists}/>\r\n                        {/* categories={categories} */}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\"> \r\n                    <AddManualItem parentId={recipe.id} refresh={refreshLists}/>\r\n                </div>\r\n            </div>\r\n                        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecipeCreator;","import React, { useState } from \"react\";\r\nimport ProductDataService from \"../services/ProductDataService\";\r\n\r\nconst ProductAdd = props => {\r\n    var initProduct = {\r\n      name: \"\",\r\n      category: \"\",\r\n      shop: \"\",\r\n      unit: \"SZT\",\r\n      price: \"\"\r\n    }\r\n\r\n    const [manualItem, setManualItem] = useState(initProduct);\r\n\r\n    const handleInputChange = (e) => setManualItem({\r\n      ...manualItem,\r\n      [e.currentTarget.name]: e.currentTarget.value\r\n    })\r\n\r\n    const addProduct = () => {\r\n        if (manualItem.name === \"\" || manualItem.category === \"\") {\r\n          alert(\"Name and category are required.\");\r\n          return;\r\n        }\r\n        ProductDataService.create(manualItem)\r\n        .then(response => {\r\n            props.refresh();\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"name\"\r\n              placeholder=\"Name...\"\r\n              required\r\n              value={manualItem.name}\r\n              onChange={handleInputChange}\r\n              name=\"name\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"category\"\r\n              placeholder=\"Category...\"\r\n              required\r\n              value={manualItem.category}\r\n              onChange={handleInputChange}\r\n              name=\"category\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"shop\"\r\n              placeholder=\"Shop...\"\r\n              required\r\n              value={manualItem.shop}\r\n              onChange={handleInputChange}\r\n              name=\"shop\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"unit\"\r\n              placeholder=\"Unit...\"\r\n              value={manualItem.unit}\r\n              onChange={handleInputChange}\r\n              name=\"unit\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\"> \r\n          <div className=\"col\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"              \r\n              id=\"price\"\r\n              placeholder=\"Price...\"\r\n              value={manualItem.price}\r\n              onChange={handleInputChange}\r\n              name=\"price\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <br/>\r\n        <button onClick={addProduct} className=\"btn btn-success\">\r\n          Add\r\n        </button>\r\n        <br/><br/>  \r\n\r\n    </div>\r\n    );\r\n  };\r\n  \r\n  export default ProductAdd;","import React, {useState, useEffect} from \"react\";\r\nimport ProductItems from \"./ProductItems\";\r\nimport ProductAdd from \"./ProductAdd\";\r\nimport ProductDataService from \"../services/ProductDataService\";\r\n\r\nconst Products = () => {\r\n    const [products, setProducts] = useState([]); \r\n    const [categories, setCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        retrieveProduct();\r\n    }, []);\r\n\r\n    //retrieve product catalog\r\n    const retrieveProduct = () => {\r\n        ProductDataService.getProductsNotOnList(null)\r\n            .then(response => {\r\n                setProducts(response.data);\r\n                const tmp = [...new Set( response.data.map(obj => obj.category)) ];\r\n                setCategories(tmp);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Products</h1>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <ProductAdd refresh={retrieveProduct}/>\r\n                </div>\r\n            </div>\r\n\r\n            <ProductItems\r\n                parentType=\"\" \r\n                parentId={null} \r\n                items={products} \r\n                categories={categories}\r\n                refresh={retrieveProduct}\r\n            />\r\n        </div>        \r\n\r\n    )\r\n}\r\n\r\nexport default Products;","import React, { useState, useEffect } from \"react\";\r\nimport ProductDataService from \"../services/ProductDataService\";\r\n\r\nconst Product = props => {\r\n  const initialProductState = {\r\n    id: null,\r\n    name: \"\",\r\n    category: \"\",\r\n    shop: \"\",\r\n    unit: \"\",\r\n    price: 0.0\r\n  };\r\n  //const [products, setProducts] = useState([]); \r\n  const [currentProduct, setCurrentProduct] = useState(initialProductState);\r\n  const [prevProduct, setPrevProduct] = useState(-1);\r\n  const [nextProduct, setNextProduct] = useState(-1);\r\n  const [message, setMessage] = useState(\"\");\r\n  \r\n  const getProduct = id => {\r\n    //   console.log('id='+id);\r\n    // ProductDataService.get(id)\r\n    //   .then(response => {\r\n    //     setCurrentProduct(response.data);\r\n    //   })\r\n    //   .catch(e => {\r\n    //     console.log(e);\r\n    //   });\r\n\r\n      ProductDataService.getProductsNotOnList(null)\r\n        .then(response => {\r\n            //setProducts(response.data);\r\n            \r\n            let currentIndex = response.data.findIndex(item => +item.id === +id)\r\n            setCurrentProduct(response.data[currentIndex]);\r\n            if (currentIndex > 0) {\r\n                setPrevProduct(response.data[currentIndex-1].id);\r\n            } else {\r\n                setPrevProduct(null);\r\n            } \r\n            if (currentIndex < response.data.length-1) {\r\n                  setNextProduct(response.data[currentIndex+1].id);\r\n            } else {\r\n                setNextProduct(null);\r\n            }       \r\n            return response.data[currentIndex];                  \r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMessage(\"\");\r\n    setCurrentProduct(getProduct(props.match.params.id));\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentProduct({ ...currentProduct, [name]: value });\r\n  };\r\n\r\n  const updateProduct = () => {\r\n    ProductDataService.update(currentProduct.id, currentProduct)\r\n      .then(response => {\r\n        setMessage(\"The Product was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const GotoProduct = (id) => {\r\n    props.history.push(process.env.PUBLIC_URL+\"/products/\"+id);    \r\n  }\r\n\r\n  const deleteProduct = () => {\r\n    if (window.confirm(\"Do you want to remove product?\")) {\r\n        ProductDataService.remove(currentProduct.id)\r\n        .then(response => {\r\n            props.history.push(process.env.PUBLIC_URL+\"/products\");\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentProduct ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Product</h4>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={currentProduct.name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"category\">Category</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"category\"\r\n                name=\"category\"\r\n                value={currentProduct.category}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"shop\">Shop</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"shop\"\r\n                name=\"shop\"\r\n                value={currentProduct.shop}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"unit\">Unit</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"unit\"\r\n                name=\"unit\"\r\n                value={currentProduct.unit}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"price\">Price</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"price\"\r\n                name=\"price\"\r\n                value={currentProduct.price}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n          </form>\r\n\r\n          {prevProduct ? \r\n          <button\r\n            type=\"submit\"\r\n             className=\"btn btn-info\"\r\n             onClick={() => GotoProduct(prevProduct)}>\r\n              &lt;\r\n          </button>\r\n          : \"\"}\r\n\r\n          {nextProduct ? \r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-info\"\r\n              onClick={() => GotoProduct(nextProduct)}>\r\n              &gt;\r\n            </button>\r\n           : \"\"}\r\n\r\n          <button className=\"btn btn-danger mr-2\" onClick={deleteProduct}>\r\n            Delete\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success\"\r\n            onClick={updateProduct}\r\n          >\r\n            Update\r\n          </button>\r\n\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;","import React from \"react\";\r\n\r\nimport ItemDataService from \"../services/ItemDataService\";\r\n//SORTTABLE - https://github.com/AllenFang/react-bootstrap-table\r\n\r\nconst toInitCap = (str) => {\r\n    return str.charAt(0).toUpperCase() + str.toLowerCase().slice(1);\r\n} \r\n\r\nconst Table = (props) => {\r\n    const total = Math.round(props.rows.reduce((a,b) => +a + +b.value, 0)*10)/10;   \r\n\r\n    //delete item from list\r\n    const markItem = (item, newStatus) => {\r\n        ItemDataService.updateItemStatus(item.id, newStatus) \r\n        .then(response => {\r\n            props.refresh();\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n        {props.rows.length > 0 ? \r\n            <div className=\"col\">\r\n                {/* <h4>{props.status}</h4> */}\r\n                {/* shops={JSON.stringify(props.shops)} */}\r\n                {/* <br/>categories={JSON.stringify(props.categories)}                  */}\r\n                <table className=\"table table-striped table-bordered table-hover table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th>Name</th>\r\n                            <th>Category</th>\r\n                            <th>Amount</th>\r\n                            <th>Unit</th>\r\n                            <th>Price</th>\r\n                            <th>Value</th>\r\n                            <th>Source</th>\r\n                            {/* <th>Date</th> */}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { props.rows.map((item, index) => (\r\n                        <tr key={index}>\r\n                            <td nowrap=\"true\">{item.status === \"ACTIVE\" ?\r\n                                <button className=\"badge badge-warning\" onClick={() => markItem(item, \"LATER\")}><span style={{fontSize:\"11px\"}}>?</span></button>\r\n                                :\r\n                                <button className=\"badge badge-info\" onClick={() => markItem(item, \"ACTIVE\")}><span style={{fontSize:\"11px\"}}>^</span></button>}\r\n                                &nbsp;{index+1}\r\n                            </td>\r\n                            {/* <td><span style={{fontSize: \"9px\"}}></span></td> */}\r\n                            <td nowrap=\"true\">\r\n                                {item.status === \"ACTIVE\" ?\r\n                                <button className=\"badge badge-success\" onClick={() => markItem(item, \"BOUGHT\")}><big>{item.name}</big></button>\r\n                                :\r\n                                <span>{item.name}</span>}\r\n                            </td>\r\n                            <td nowrap=\"true\">{toInitCap(item.category)}</td>                            \r\n                            <td style={{textAlign: \"right\"}}>{item.amount}</td>\r\n                            <td>{item.unit.toLowerCase()}</td>\r\n                            <td style={{textAlign: \"right\"}}>{item.price}</td>\r\n                            <td style={{textAlign: \"right\"}}><b>{item.value}</b></td>\r\n                            <td nowrap=\"true\"><i>{item.source}</i></td>\r\n                            {/* <td nowrap=\"true\">{item.createdAt}</td> */}\r\n                        </tr>\r\n                    )) }\r\n                    <tr>\r\n                        <td colSpan=\"6\">Total</td>\r\n                        <td style={{textAlign: \"right\"}}><b>{total}</b></td>\r\n                        <td></td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        : \"Lista jest pusta\" }\r\n    </div>\r\n    )\r\n}\r\n\r\nconst ItemsExecute = props => {\r\n    let items = props.items.filter(item => item.status===props.status);\r\n    const shops = [...new Set( items.map(obj => toInitCap(obj.shop))) ].sort((a, b) => a > b ? 1: -1);\r\n    const categories = [...new Set( items.map(obj => toInitCap(obj.category))) ];\r\n\r\n    const total = Math.round(props.items.filter(item => item.status === props.status).reduce((a,b) => +a + +b.value, 0)*10)/10;\r\n\r\n    return (\r\n        <div>\r\n            <h4>{props.status}, total={ total }</h4>\r\n            { shops.map( (shop, index) => {\r\n                let shopItems = items.filter(item => toInitCap(item.shop)===shop)                \r\n                return (\r\n                    <div>\r\n                        <br/><h5><span style={{color: \"blue\"}}>{shop}</span></h5>\r\n                        <Table rows={shopItems} refresh={props.refresh} status={props.status} shops={shops} categories={categories}/>\r\n                    </div>\r\n                )\r\n            }) }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemsExecute;\r\n\r\n\r\n        // ItemsDataService.updateBuyListItem(item.id, \"updated \"+new Date()) \r\n        // .then(response => {\r\n        //     props.refresh();\r\n        // })\r\n        // .catch(e => {\r\n        //     console.log(e);\r\n        // });\r\n\r\n        // <div className=\"row\">\r\n        // <div className=\"col-md-8\">\r\n        // </div>\r\n        // </div>\r\n\r\n        //<input type=\"number\" value={item.price} name={\"price-\"+index} onChange={handleChange}></input>\r\n        //<input type=\"number\"\r\n        \r\n            //handle price change\r\n    // const handleChange = (event) => {\r\n    //     // const { name, value } = event.target;\r\n    //     // setCurrentBuyList({ ...currentBuyList, [name]: value });\r\n    //     const { name, value } = event.target;\r\n    //     let field = name.substr(0,name.indexOf(\"-\"));\r\n    //     let index = name.substr(name.indexOf(\"-\")+1);\r\n    //     filteredItems[index][field] = value;\r\n    //     filteredItems[index].value = filteredItems[index].price * filteredItems[index].amount;\r\n    // } ","import React, { useState, useEffect } from \"react\";\r\nimport ItemsExecute from \"./ItemsExecute\";\r\nimport ListDataService from \"../services/ListDataService\";\r\nimport ItemDataService from \"../services/ItemDataService\";\r\n\r\nconst BuyListExecute = props => {\r\n    var buyListId = props.match.params.id;\r\n\r\n    const buyListObj = {\r\n        id: buyListId,\r\n        name: \"\",\r\n        description: \"\",\r\n        active: false\r\n    }\r\n\r\n    const [buyList, setBuyList] = useState(buyListObj); \r\n    const [items, setItems] = useState([]);\r\n    // const [categories, setCategories] = useState([]);\r\n       \r\n    useEffect(() => {\r\n        retrieveBuyList(buyListId);\r\n        retrieveItems(buyListId);\r\n    }, [buyListId]);\r\n\r\n    //retrieve buy list info\r\n    const retrieveBuyList = id => {\r\n        ListDataService.get(id) \r\n        .then(response => {\r\n            setBuyList(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    };\r\n\r\n    //retrieve items of buy list\r\n    const retrieveItems = buylistid => {        \r\n        ItemDataService.getItems(buylistid) \r\n        .then(response => {\r\n            setItems(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n          //refresh both lists\r\n    const refreshList = () => {\r\n        retrieveItems(buyListId);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>#{buyList.id} {buyList.name} {buyList.description}</h3>\r\n            <div className=\"row\">\r\n                <div className=\"col\">   \r\n                    <button className=\"m-3 btn btn-sm btn-primary\" onClick={()=>{props.history.push(process.env.PUBLIC_URL+\"/buylists/creator/\"+buyListId)} }>\r\n                        Prepare list\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">                       \r\n                    <ItemsExecute items={items} buyListId={buyListId} refresh={refreshList} status=\"ACTIVE\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">   \r\n                    <ItemsExecute items={items} buyListId={buyListId} refresh={refreshList} status=\"LATER\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">  \r\n                    <ItemsExecute items={items} buyListId={buyListId} refresh={refreshList} status=\"BOUGHT\"/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuyListExecute;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link/*, useRouteMatch */} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Home from \"./components/Home\";\nimport BuyListAdd from \"./components/BuyListAdd\";\nimport BuyLists from \"./components/BuyLists\";\nimport BuyList from \"./components/BuyList\";\nimport BuyListCreator from \"./components/BuyListCreator\";\nimport Recipes from \"./components/Recipes.js\";\nimport RecipeAdd from \"./components/RecipeAdd.js\";\nimport RecipeCreator from \"./components/RecipeCreator\";\nimport Products from \"./components/Products\";\nimport Product from \"./components/Product\";\nimport BuyListExecute from \"./components/BuyListExecute\";\n\n//import TableTest from \"./components/Table\";\n\nfunction App() {\n  //let match = useRouteMatch();\n  return (\n    <Router>\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={`${process.env.PUBLIC_URL}/home`} className=\"navbar-brand\">\n            <span className=\"glyphicon glyphicon-home\">Home</span>\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={`${process.env.PUBLIC_URL}/buylists`} className=\"nav-link\">\n                Shop lists\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={`${process.env.PUBLIC_URL}/recipes`} className=\"nav-link\">\n                Recipes\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={`${process.env.PUBLIC_URL}/products`} className=\"nav-link\">\n                Products\n              </Link>\n            </li>\n          </div>\n        </nav>\n        \n        <div className=\"container mt-3\">\n\n            <Switch>\n              <Route exact path={`${process.env.PUBLIC_URL}/buylists`} component={BuyLists} />\n              <Route exact path={`${process.env.PUBLIC_URL}/buylists/add`} component={BuyListAdd} />\n              <Route exact path={`${process.env.PUBLIC_URL}/buylists/execute/:id`} component={BuyListExecute} />  \n              <Route exact path={`${process.env.PUBLIC_URL}/buylists/creator/:id`} component={BuyListCreator} />  \n              <Route path={`${process.env.PUBLIC_URL}/buylists/:id`} component={BuyList} />\n              <Route exact path={`${process.env.PUBLIC_URL}/recipes`} component={Recipes} />  \n              <Route exact path={`${process.env.PUBLIC_URL}/recipes/add`} component={RecipeAdd} /> \n              <Route path={`${process.env.PUBLIC_URL}/recipes/creator/:id`} component={RecipeCreator} /> \n              <Route exact path={`${process.env.PUBLIC_URL}/products`} component={Products} />    \n              <Route path={`${process.env.PUBLIC_URL}/products/:id`} component={Product} />\n              <Route exact path={[\"/\", `${process.env.PUBLIC_URL}/home`]} component={Home} />\n              {/* <Route exact path=\"/table\" component={TableTest} />    */}\n            </Switch>\n\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}